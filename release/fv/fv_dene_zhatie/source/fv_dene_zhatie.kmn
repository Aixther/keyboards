store(&VERSION) "10.0"
store(&TARGETS) 'any mobile desktop tablet'
c store(&ETHNOLOGUECODE) "xsl"
store(&COPYRIGHT) '(c) 2015-2023 FirstVoices, SIL International, 2015 First Peoples' U+0027 ' Cultural Foundation'
store(&NAME) 'Dene Zhatié'
store(&KEYBOARDVERSION) '10.0'
store(&BITMAP) 'fv_dene_zhatie.ico'
store(&VISUALKEYBOARD) 'fv_dene_zhatie.kvks'
store(&KMW_HELPFILE) 'fv_dene_zhatie-help.htm'

begin Unicode > use(main)

group(main) using keys


c --- START OF TOUCH LAYOUT RULES ---

c Touch layout rules originally imported from KeyMap.plist on Tue Nov 17 2015

c store(&LAYOUTFILE) "fv_dene_zhatie.keyman-touch-layout"

c --- TOUCH STORES---
store(BaseVowels) 'aeouAEOU'
store(HasAcute) 'áéóúÁÉÓÚ'
store(MAcute) [T_Q] [SHIFT T_Q]
store(HasOgonek) 'ąęǫųĄĘǪŲ'
store(MOgonek) [T_F] [SHIFT T_F]
store(MBackspace) [K_BKSP] [SHIFT K_BKSP]

any(BaseVowels) + any(MAcute) > index(HasAcute,1)
any(HasAcute) + any(MOgonek) > index(HasOgonek,1) U+0301
any(HasAcute) + any(MBackspace) > index(BaseVowels,1)
any(BaseVowels) + any(MOgonek) > index(HasOgonek,1)
any(HasOgonek) + any(MAcute) > index(HasOgonek,1) U+0301
any(HasOgonek) + any(MBackspace) > index(BaseVowels,1)


'ı' + [SHIFT T_Q] > 'í'
'ı̨' + [SHIFT T_Q] > 'ı̨́'
'I' + [SHIFT T_Q] > 'Í'
'Į' + [SHIFT T_Q] > 'Į́'
+ [SHIFT T_W] > 'W' layer('default')
+ [SHIFT T_E_0] > 'É' layer('default')
+ [SHIFT T_E_1] > 'Ę' layer('default')
+ [SHIFT T_E_2] > 'Ę́' layer('default')
+ [SHIFT T_E] > 'E' layer('default')
+ [SHIFT T_R] > 'R' layer('default')
+ [SHIFT T_T] > 'T' layer('default')
+ [SHIFT T_Y] > 'Y' layer('default')
+ [SHIFT T_U_0] > 'Ú' layer('default')
+ [SHIFT T_U_1] > 'Ų' layer('default')
+ [SHIFT T_U_2] > 'Ų́' layer('default')
+ [SHIFT T_U] > 'U' layer('default')
+ [SHIFT T_I_0] > 'Í' layer('default')
+ [SHIFT T_I_1] > 'Į' layer('default')
+ [SHIFT T_I_2] > 'Į́' layer('default')
+ [SHIFT T_I] > 'I' layer('default')
+ [SHIFT T_O_0] > 'Ó' layer('default')
+ [SHIFT T_O_1] > 'Ǫ' layer('default')
+ [SHIFT T_O_2] > 'Ǫ́' layer('default')
+ [SHIFT T_O] > 'O' layer('default')
+ [SHIFT T_P] > 'Ł' layer('default')
+ [SHIFT T_A_0] > 'Á' layer('default')
+ [SHIFT T_A_1] > 'Ą' layer('default')
+ [SHIFT T_A_2] > 'Ą́' layer('default')
+ [SHIFT T_A] > 'A' layer('default')
+ [SHIFT T_S] > 'S' layer('default')
+ [SHIFT T_D] > 'D' layer('default')
'ı' + [SHIFT T_F] > 'ı̨'
'í' + [SHIFT T_F] > 'ı̨́'
'I' + [SHIFT T_F] > 'Į'
'Í' + [SHIFT T_F] > 'Į́'
+ [SHIFT T_G] > 'G' layer('default')
+ [SHIFT T_H] > 'H' layer('default')
+ [SHIFT T_J] > 'J' layer('default')
+ [SHIFT T_K] > 'K' layer('default')
+ [SHIFT T_L] > 'L' layer('default')
+ [SHIFT T_COLON_0] > '"' layer('default')
+ [SHIFT T_COLON] > "'" layer('default')
+ [SHIFT T_Z] > 'Z' layer('default')
+ [SHIFT T_X] > 'X' layer('default')
+ [SHIFT T_C] > 'C' layer('default')
+ [SHIFT T_V] > 'Ɂ' layer('default')
+ [SHIFT T_B] > 'B' layer('default')
+ [SHIFT T_N] > 'N' layer('default')
+ [SHIFT T_M] > 'M' layer('default')
'ı' + [T_Q] > 'í'
'ı̨' + [T_Q] > 'ı̨́'
'I' + [T_Q] > 'Í'
'Į' + [T_Q] > 'Į́'
+ [T_W] > 'w'
+ [T_E_0] > 'é'
+ [T_E_1] > 'ę'
+ [T_E_2] > 'ę́'
+ [T_E] > 'e'
+ [T_R] > 'r'
+ [T_T] > 't'
+ [T_Y] > 'y'
+ [T_U_0] > 'ú'
+ [T_U_1] > 'ų'
+ [T_U_2] > 'ų́'
+ [T_U] > 'u'
+ [T_I_0] > 'í'
+ [T_I_1] > 'ı̨'
+ [T_I_2] > 'ı̨́'
+ [T_I] > 'ı'
+ [T_O_0] > 'ó'
+ [T_O_1] > 'ǫ'
+ [T_O_2] > 'ǫ́'
+ [T_O] > 'o'
+ [T_P] > 'ł'
+ [T_A_0] > 'á'
+ [T_A_1] > 'ą'
+ [T_A_2] > 'ą́'
+ [T_A] > 'a'
+ [T_S] > 's'
+ [T_D] > 'd'
'ı' + [T_F] > 'ı̨'
'í' + [T_F] > 'į'
'I' + [T_F] > 'Į'
'Í' + [T_F] > 'Į́'
+ [T_G] > 'g'
+ [T_H] > 'h'
+ [T_J] > 'j'
+ [T_K] > 'k'
+ [T_L] > 'l'
+ [T_COLON_0] > '"'
+ [T_COLON] > "'"
+ [T_Z] > 'z'
+ [T_X] > 'x'
+ [T_C] > 'c'
+ [T_V] > 'ɂ'
+ [T_B] > 'b'
+ [T_N] > 'n'
+ [T_M] > 'm'

c --- END OF TOUCH LAYOUT RULES ---

c --- BEGIN DESKTOP LAYOUT ---

c original punctuation
+ [NCAPS RALT K_BKQUOTE] > '`'
+ [CAPS RALT K_BKQUOTE] > '`'
+ [NCAPS SHIFT RALT K_BKQUOTE] > '~'
+ [CAPS SHIFT RALT K_BKQUOTE] > '~'

+ [NCAPS RALT K_EQUAL] > '='
+ [CAPS RALT K_EQUAL] > '='
+ [NCAPS SHIFT RALT K_EQUAL] > '+'
+ [CAPS SHIFT RALT K_EQUAL] > '+'

+ [NCAPS RALT K_COLON] > ';'
+ [CAPS RALT K_COLON] > ';'
+ [NCAPS SHIFT RALT K_COLON] > ':'
+ [CAPS SHIFT RALT K_COLON] > ':'

+ [NCAPS RALT K_SLASH] > '/'
+ [CAPS RALT K_SLASH] > '/'
+ [NCAPS SHIFT RALT K_SLASH] > '?'
+ [CAPS SHIFT RALT k_SLASH] > '?'

+ [CAPS RALT K_BKSLASH] > '\'
+ [NCAPS RALT K_BKSLASH ] > '\'
+ [NCAPS SHIFT RALT K_BKSLASH] > '|'
+ [CAPS SHIFT RALT K_BKSLASH] > '|'

+ [NCAPS RALT K_LBRKT] > '['
+ [CAPS RALT K_LBRKT] > '['
+ [NCAPS SHIFT RALT K_LBRKT] > '{'
+ [CAPS SHIFT RALT K_LBRKT] > '{'

+ [NCAPS RALT K_RBRKT] > ']'
+ [CAPS RALT K_RBRKT] > ']'
+ [NCAPS SHIFT RALT K_RBRKT] > '}'
+ [CAPS SHIFT RALT K_RBRKT] > '}'

c Guillemets
+ [NCAPS SHIFT RALT K_0] > '›'
+ [CAPS SHIFT RALT K_0] > '›'
+ [NCAPS SHIFT RALT K_9] > '‹'
+ [CAPS SHIFT RALT K_9] > '‹'
+ [NCAPS RALT K_0] > '»'
+ [CAPS RALT K_0] > '»'
+ [NCAPS RALT K_9] > '«'
+ [CAPS RALT K_9] > '«'

c Quotes
+ [NCAPS SHIFT K_RBRKT] > "”"
+ [NCAPS SHIFT K_LBRKT] > "“"
+ [NCAPS SHIFT K_BKQUOTE] > "‘"
+ [K_QUOTE] > "’"

c letter 'I'
+ [NCAPS RALT K_I] > 'i'
+ [CAPS RALT K_I] > 'I'
+ [NCAPS SHIFT RALT K_I] > 'I'
+ [CAPS SHIFT RALT K_I] > 'i'

c language

+ [NCAPS K_BKQUOTE] > U+0301

+ [NCAPS K_EQUAL] > 'ṉ'
+ [CAPS K_EQUAL] > 'Ṉ'
+ [NCAPS SHIFT K_EQUAL] > 'Ṉ'
+ [CAPS SHIFT K_EQUAL] > 'ṉ'

+ [NCAPS K_COLON] > 'ł'
+ [CAPS K_COLON] > 'Ł'
+ [NCAPS SHIFT K_COLON] > 'Ł'
+ [CAPS SHIFT K_COLON] > 'ł'   

+ [NCAPS K_SLASH] > 'ɂ'
+ [CAPS K_SLASH] > 'ʔ'
+ [NCAPS SHIFT K_SLASH] > 'ʔ'
+ [CAPS SHIFT K_SLASH] > 'ɂ'

+ [NCAPS K_I] > 'ı'
+ [CAPS K_I] > 'I'
+ [NCAPS SHIFT K_I] > 'I'
+ [CAPS SHIFT K_I] > 'ı'

+ [NCAPS K_LBRKT] > U+0328


+ [NCAPS K_RBRKT] > U+0328 U+0301


+ [NCAPS SHIFT K_RBRKT] > U+201D



c --- stores and rules ---

store(Acute) [NCAPS K_BKQUOTE] [CAPS K_BKQUOTE]
store(Ogonek) [NCAPS K_LBRKT] [CAPS K_LBRKT]
store(AcuteOgonek) [NCAPS K_RBRKT] [CAPS K_RBRKT]
store(NonLetters) '1234567890-=[]\;,./`~!@#$%^&*()_+{}|:"<>?‘’“”‹›«»' "'"  c preventing accents on non-letters
store(Backspace) [K_BKSP]
store(AccentKeys) [NCAPS K_BKQUOTE] [CAPS K_BKQUOTE] [NCAPS K_LBRKT] [CAPS K_LBRKT] [CAPS K_RBRKT] [NCAPS K_RBRKT]
store(Accents) '́' '̨'

any(NonLetters) + any(AccentKeys) > context beep
any(Accents) + any(AccentKeys) > context beep

any(BaseVowels) + any(Acute) > index(HasAcute,1)
any(BaseVowels) + any(Ogonek) > index(HasOgonek,1)
any(HasAcute) + any(Ogonek) > index(HasOgonek,1) U+0301
any(HasOgonek) + any(Acute) > index(HasOgonek,1) U+0301
any(BaseVowels) + any(AcuteOgonek) > index(HasOgonek,1) U+0301

c --- backspace ---
any(HasAcute) + any(Backspace) > index(BaseVowels,1)
any(HasOgonek) + any(Backspace) > index(BaseVowels,1)
